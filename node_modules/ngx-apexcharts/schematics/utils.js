"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateJsonInTree = exports.readJsonInTree = void 0;
const stripJsonComments = require("strip-json-comments");
function readJsonInTree(host, path) {
    if (!host.exists(path)) {
        throw new Error(`Cannot find ${path}`);
    }
    const contents = stripJsonComments(host.read(path).toString('utf-8'));
    try {
        return JSON.parse(contents);
    }
    catch (e) {
        throw new Error(`Cannot parse ${path}: ${e instanceof Error ? e.message : ''}`);
    }
}
exports.readJsonInTree = readJsonInTree;
function updateJsonInTree(path, callback) {
    return (host, context) => {
        if (!host.exists(path)) {
            host.create(path, serializeJson(callback({}, context)));
            return host;
        }
        host.overwrite(path, serializeJson(callback(readJsonInTree(host, path), context)));
        return host;
    };
}
exports.updateJsonInTree = updateJsonInTree;
function serializeJson(json) {
    return `${JSON.stringify(json, null, 2)}\n`;
}
//# sourceMappingURL=utils.js.map